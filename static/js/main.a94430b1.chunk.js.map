{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx"],"names":["Carousel","images","position","animationDuration","frameSize","itemWidth","isPrevBtnActive","handlePrevBtnClick","isNextBtnActive","handleNextBtnClick","widthCarouselBlock","translateCoords","className","style","maxWidth","transform","transition","map","image","flexBasis","src","alt","type","disabled","cn","onClick","Settings","setItemWidth","imageCount","setFrameSize","step","setStep","setAnimationDuration","htmlFor","value","min","max","onChange","event","target","name","Math","floor","length","App","useState","setPosition","setIsPrevBtnActive","setIsNextBtnActive","LAST_POSITON","useEffect","currentPosition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a94430b1.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  position : number,\n  animationDuration : number,\n  frameSize: number,\n  itemWidth: number,\n  isPrevBtnActive: boolean,\n  handlePrevBtnClick: () => void\n  isNextBtnActive: boolean,\n  handleNextBtnClick: () => void\n}\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  position,\n  animationDuration,\n  frameSize,\n  itemWidth,\n  isPrevBtnActive,\n  handlePrevBtnClick,\n  isNextBtnActive,\n  handleNextBtnClick,\n}) => {\n  const widthCarouselBlock = frameSize * itemWidth;\n  const translateCoords = position * -itemWidth;\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__content\"\n        style={{\n          maxWidth: `${widthCarouselBlock}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${translateCoords}px)`,\n            transition: `transform ${animationDuration}ms linear`,\n          }}\n        >\n          {images.map(image => (\n            <li\n              className=\"Carousel__item\"\n              style={{\n                flexBasis: `${itemWidth}px`,\n              }}\n              key={image}\n            >\n              <img\n                className=\"Carousel__image\"\n                src={image}\n                alt=\"1\"\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__btns\">\n        <button\n          type=\"button\"\n          disabled={!isPrevBtnActive}\n          className={cn('Carousel__button', {\n            'is-disabled': !isPrevBtnActive,\n          })}\n          onClick={handlePrevBtnClick}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          disabled={!isNextBtnActive}\n          className={cn('Carousel__button', {\n            'is-disabled': !isNextBtnActive,\n          })}\n          onClick={handleNextBtnClick}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './Settings.scss';\n\ninterface Props {\n  itemWidth: number,\n  setItemWidth: (value: number) => void,\n  imageCount: number,\n  frameSize: number,\n  setFrameSize: (value: number) => void,\n  step: number,\n  setStep: (value: number) => void,\n  animationDuration: number,\n  setAnimationDuration: (value: number) => void,\n}\n\nexport const Settings: React.FC<Props> = ({\n  itemWidth,\n  setItemWidth,\n  imageCount,\n  frameSize,\n  setFrameSize,\n  step,\n  setStep,\n  animationDuration,\n  setAnimationDuration,\n}) => (\n  <div className=\"Settings\">\n    <div className=\"Settings__row\">\n      <label className=\"Settings__label\" htmlFor=\"itemWidth\">\n        Image width:\n      </label>\n\n      <input\n        className=\"Settings__field\"\n        type=\"range\"\n        value={itemWidth}\n        min={100}\n        max={300}\n        onChange={(event) => setItemWidth(+event.target.value)}\n        name=\"itemWidth\"\n      />\n\n      <span className=\"Settings__currentValue\">{itemWidth}</span>\n    </div>\n\n    <div className=\"Settings__row\">\n      <label className=\"Settings__label\" htmlFor=\"frameSize\">\n        Images count:\n      </label>\n\n      <input\n        className=\"Settings__field\"\n        type=\"range\"\n        min={1}\n        max={Math.floor(imageCount / 2)}\n        value={frameSize}\n        onChange={(event) => setFrameSize(+event.target.value)}\n        name=\"frameSize\"\n      />\n\n      <span className=\"Settings__currentValue\">{frameSize}</span>\n    </div>\n\n    <div className=\"Settings__row\">\n      <label className=\"Settings__label\" htmlFor=\"step\">\n        Step size:\n      </label>\n\n      <input\n        className=\"Settings__field\"\n        type=\"range\"\n        value={step}\n        min={1}\n        max={imageCount}\n        onChange={(event) => setStep(+event.target.value)}\n        name=\"step\"\n      />\n\n      <span className=\"Settings__currentValue\">{step}</span>\n    </div>\n\n    <div className=\"Settings__row\">\n      <label className=\"Settings__label\" htmlFor=\"animationDuration\">\n        Animation duration:\n      </label>\n\n      <input\n        className=\"Settings__field\"\n        type=\"range\"\n        min={500}\n        max={5000}\n        value={animationDuration}\n        onChange={(event) => setAnimationDuration(+event.target.value)}\n        name=\"animationDuration\"\n      />\n\n      <span className=\"Settings__currentValue\">{animationDuration}</span>\n    </div>\n  </div>\n);\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\n\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Settings } from './components/Settings';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst imageCount = images.length;\n\nexport const App: React.FC = () => {\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(1);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [position, setPosition] = useState(0);\n  const [isPrevBtnActive, setIsPrevBtnActive] = useState(false);\n  const [isNextBtnActive, setIsNextBtnActive] = useState(true);\n\n  const LAST_POSITON = imageCount - frameSize;\n  const FIRST_POSITION = 0;\n\n  const handlePrevBtnClick = () => {\n    setPosition(currentPosition => (position - step >= FIRST_POSITION\n      ? currentPosition - step\n      : FIRST_POSITION));\n  };\n\n  const handleNextBtnClick = () => {\n    setPosition(currentPosition => (position + step <= LAST_POSITON\n      ? currentPosition + step\n      : LAST_POSITON));\n  };\n\n  useEffect(() => {\n    setIsPrevBtnActive(position > FIRST_POSITION);\n    setIsNextBtnActive(position < LAST_POSITON);\n  }, [position]);\n\n  useEffect(() => {}, [\n    itemWidth,\n    frameSize,\n    step,\n    animationDuration,\n  ]);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 className='App__title' data-cy=\"title\">Carousel with {imageCount} images</h1>\n\n      <Settings\n        itemWidth={itemWidth}\n        setItemWidth={setItemWidth}\n        imageCount={imageCount}\n        frameSize={frameSize}\n        setFrameSize={setFrameSize}\n        step={step}\n        setStep={setStep}\n        animationDuration={animationDuration}\n        setAnimationDuration={setAnimationDuration}\n      />\n\n      <div\n        className=\"App__content\"\n        style={{\n          maxWidth: `${imageCount * itemWidth}px`,\n        }}\n      >\n        <Carousel\n          images={images}\n          position={position}\n          animationDuration={animationDuration}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          isPrevBtnActive={isPrevBtnActive}\n          handlePrevBtnClick={handlePrevBtnClick}\n          isNextBtnActive={isNextBtnActive}\n          handleNextBtnClick={handleNextBtnClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}